admin3@admin.admin - vber#%TverASF6
admin1@admin.admin - BOUN234trASD786
https://habr.com/ru/post/341704/
---------ДОСТУП к СЕРВЕРАМ--------------------------------------------------
sudo ssh -i "kk/ds_prod" ubuntu@51.250.92.135		# ru
ssh -i "kk/ds_prod" root@165.227.155.121		# dev site
ssh -i "kk/ds_prod" root@165.22.64.66			# prod
/home/ritter00/kk
------------------ЯНДЕКС CLOUD-----------------------------------------------
git pull
delivery
docker-compose down
docker-compose -f docker-compose.yadcloud.yml build
docker-compose -f docker-compose.yadcloud.yml up
-----------МИГРАЦИИ------------------------------------------------------------
docker-compose down -v	# сбросить миграции
docker-compose build
docker-compose up
docker-compose exec web python manage.py makemigrations		# во втором терминале
docker-compose exec web python manage.py migrate
------------ПЕРЕВОД-----------------------------------------------------------
docker-compose exec web django-admin makemessages -l en		# подготовка перевода
docker-compose exec web django-admin compilemessages		# применение
-----------Установить НОВУЮ БИБЛИОТЕКУ-----------------------------------------
docker-compose exec web pip install django-modeltranslation
docker-compose exec web pip freeze > requirements.txt
------------STRIPE WEBHOOK------------------------------------------------------
./stripe listen --forward-to localhost:8000/webhook/

docker exec -it 16f67df7da20 /bin/bash	# доступ в контейнер
chmod o+xrw $(find *.jpg)		# найти и назначить права

docker-compose up --force-recreate

docker-compose exec web python manage.py shell
from shop.models import Product
pr = Product.objects.all()
for p in pr: p.save()

sudo chmod 777 db_django	#права удалить папку
sudo rm -r db_django/
sudo chown -R ritter00:ritter00 db_django/

docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)
docker system prune --volumes	#очистить образы

------	ДАМП с сервера на локалку ВИСЕМ -----------------
source /home/visemby/virtualenv/dev.visem.by/3.8/bin/activate && cd /home/visemby/dev.visem.by			#виртульное окр на сервере
mysqldump --no-tablespaces -u visemby_visem_dev --password=visem_a1zahOeR9kcef visemby_dev > dump22_06_23.sql   # сделать дамп БД на дев-висем

source /home/visemby/virtualenv/visem.by/3.8/bin/activate && cd /home/visemby/visem.by				#prod
mysqldump --no-tablespaces -u visemby_visemby --password=visem_dd2dda1GWzahOeR9kcef visemby_visemby > dump05_07_23.sql

														#скачать и загрузить в корень проекта
sudo rm -r db_django/												#удалить БД
docker system prune --volumes											#очистить образы чистит все
#удалить контейнер с базой данных
docker-compose up --build											#заново собрать
# перед загрузкой дампа сделать миграции											 
docker-compose exec web python manage.py makemigrations								# во втором терминале
docker-compose exec web python manage.py migrate
cat dump05_07_23.sql | docker exec -i 890c440b79a30311016da04fbed918e5db6ec5b89f665b0089f4eb61e2323c3b /usr/bin/mysql -u root --password=password db_django		#загрузить бд(номер контейнера взять свой - b367287b312f)
-----------------------------------------------------------

cat dump07_06_22.sql | docker exec -i 945cb1dc8ecc /usr/bin/mysql -u root --password=password db_django 	# загрузить дамп памяти backup.sql
cat dump31_10_22.sql | docker exec -i b367287b312f /usr/bin/mysql -u root --password=password db_django
docker exec 0d5a544509f7 /usr/bin/mysqldump -u root --password=password db_django > backup_10_may_2022.sql		# перезаписать дамп памяти backup.sql
docker exec 1c4bba058f81 /usr/bin/mysqldump -u root --password=password db_django > backup_6_june_2022_adr.sql

cat dump_migrator_10.july.2022.sql | docker exec -i 1fdf480233db psql --username delivery delivery_db	#DS
docker exec -i 1fdf480233db psql --username delivery delivery_db < dump_migrator_10.july.2022.sql
docker exec -it 4540739de5b0 dropdb delivery_db -U delivery						#KILL db DS

mysqldump --no-tablespaces -u visemby_visem_dev --password=visem_a1zahOeR9kcef visemby_dev > dump22_06_23.sql  # сделать дамп БД на дев-висем

send_mail('subject', 'body of the message', 'postmaster@mail.deliverysolution.site', ['django.test.ds.183@gmail.co'])
------------Parser + cron --------------------------------------
docker-compose exec web python manage.py shell
docker-compose exec web python manage.py parse_products		# парсинг товаров Висем
source /home/visemby/virtualenv/dev.visem.by/3.8/bin/activate && cd /home/visemby/dev.visem.by && python manage.py parse_products # script for cron visem

---Деплой Висем------------------------------------serve
source /home/visemby/virtualenv/dev.visem.by/3.8/bin/activate && cd /home/visemby/dev.visem.by	#виртульное окр
git pull origin dev
ssh password на хостинге - visem
python manage.py migrate
pip install -r requirements.txt
затем перезагружаешь приложение и обнуляешь passenger
git restore passenger_wsgi.py
---------------------------CI/CD--------------------------------------
https://medium.com/swlh/how-to-deploy-your-application-to-digital-ocean-using-github-actions-and-save-up-on-ci-cd-costs-74b7315facc2
------------------------deploy delivery.site--------------------------------------
cd ../usr/src/delivery-solution
git pull git@github.com:DeliverySolution/delivery-solution.git
docker-compose -f docker-compose.prod.yml down
docker-compose -f docker-compose.prod.yml up --build -d 
docker-compose -f docker-compose.prod.yml exec web python manage.py migrate &&
docker-compose -f docker-compose.prod.yml exec web python manage.py collectstatic --no-input --clear
docker system prune -a
------------------------deploy prod delivery.site--------------------------------------
cd ../usr/src/delivery-solution
git pull git@github.com:DeliverySolution/delivery-solution.git
docker-compose -f docker-compose.prod.real.yml down
docker-compose -f docker-compose.prod.real.yml up --build -d 
docker-compose -f docker-compose.prod.real.yml exec web python manage.py migrate &&
docker-compose -f docker-compose.prod.real.yml exec web python manage.py collectstatic --no-input --clear
-----------------обновить сертификат dev.delivery------------------------------
cd ../usr/src/delivery-solution
docker-compose -f docker-compose.prod.yml down								#остановить сервер, порт 80 д.б. свободен
certbot certonly -d dev.deliverysolution.site								#(sudo) обновить сертификат для dev.deliverysolution.site
Выберите Spin up a temporary webserver (standalone) (введите 1).					#поднять временный сервер для проверки
Выберите Renew & replace the cert (limit ~5 per 7 days) (введите 2).
docker-compose -f docker-compose.prod.yml up --build -d 						#запкстить контейнеры 
https://trueconf.ru/blog/baza-znaniy/sozdanie-sertifikata-lets-encrypt-na-linux.html			#получить и обновить сертификат на сервере
https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71  	#docker-nginx-certbot
# wildcard на поддомены
https://www.digitalocean.com/community/tutorials/how-to-create-let-s-encrypt-wildcard-certificates-with-certbot
sudo certbot certonly   --dns-digitalocean   --dns-digitalocean-credentials ~/certbot-creds.ini   -d 'deliverysolution.site' -d '*.deliverysolution.site'
___________________________________________________
https://habr.com/ru/post/579336/ спарсить любой сайт

------------------залить бд деливери-------------------------------
удалить контейнер с бд
docker volume rm delivery-solution_postgres_data 			#удалить том с БД
docker-compose build
docker-compose up
cat dump_migrator_10.july.2022.sql | docker exec -i 1fdf480233db psql --username delivery delivery_db	#залить базу
docker-compose exec web python manage.py makemigrations		
docker-compose exec web python manage.py migrate

cat bsckup.sql | docker exec -it pg_container -U delivery -d delivery_db
docker exec -it 4540739de5b0 dropdb delivery_db -U delivery
postgresql
sudo systemctl stop postgresql
-с "CREATE DATABASE delivery_db;"
docker exec -it 4540739de5b0 psql -U delivery -c "CREATE DATABASE delivery_db;"
-----------------------------------------------------------
https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
https://www.nginx.com/blog/using-free-ssltls-certificates-from-lets-encrypt-with-nginx/

Например, для Chrome необходимо зайти по адресу chrome://net-internals/#hsts и удалить домен через раздел «Delete domain security policies». 
Достаточно вписать свой адрес домена в поле «Domain» и нажать «Delete».
---------------traefik-------------------------------
docker restart traefik
docker logs -f traefik
chmod 600 ./acme.json
cd ./traefik
touch ./acme.json
chmod 600 ./acme.json
docker-compose -f docker-compose.traefik.yml up -d
cd ..
docker-compose -f docker-compose.prod.real.yml up -d

https://bitbucket.org/blog/ssh-host-key-changes	#изменить ключ доступа bitbucket

#ускорение django
https://habr.com/ru/companies/first/articles/728792/ation: sso-key 3mM44Uch7TEK8j_TAVH33ys6XCw9SZaCmkvPX:WGTTEfsuum4afDsQVe741n" "https://api.ote-godaddy.com/v1/domains/available?domain=example.guru"