Сперва стоит дать сводную информацию о файлах настроек различных компонентов сети в разных дистрибутивах Linux. На всякий случай будет приведена информация для разных дистрибутивов Linux, в том числе и старых версий.

Вот некоторые из них:

/etc/hosts.conf	
Содержит параметры разрешения доменных имён.

Например, директива order hosts,bind означает, что сначала поиск IP-адреса по доменному имени будет произведен в файле /etc/hosts, и лишь затем будет произведено обращение к DNS-серверу, заданному в файле /etc/resolv.conf.

Директива multi on означает, что одному доменному имени могут соответствовать несколько IP-адресов.

/etc/hosts	В этом файле можно прописать IP-адреса и имена узлов локальной сети, но обычно здесь указывается только IP-адрес узла localhost (127.0.0.1), потому что сейчас даже в небольшой локальной сети устанавливается собственный DNS-сервер.
/etc/hosts.allow	Содержит IP-адреса узлов, которым разрешён доступ к сервисам данного узла.
/etc/hosts.deny	Содержит IP-адреса узлов, которым запрещён доступ к сервисам данного узла.
/etc/hostname	В Debian/Ubuntu содержит имя узла.
/etc/motd	
Файл задает сообщение дня (Message of the day).

Данный файл используется многими сетевыми сервисами (например, FTP- и SSH-серверами), которые при регистрации пользователя могут выводить сообщение из этого файла.

/etc/network/interfaces	
В Debian и Ubuntu используется для ручной настройки сетевых интерфейсов (не с помощью NetworkManager).

Вообще, принято настраивать сетевые интерфейсы с помощью NetworkManager, но некоторые администраторы предпочитают отключать NetworkManager и настраивать сетевые интерфейсы вручную — по старинке.

/etc/rc.config	В openSUSE содержит имя компьютера, IP-адрес интерфейса и другую сетевую информацию.
/etc/resolv.conf	
Задаёт IP-адреса серверов DNS.

Формат файла прост: nameserver IP-адрес. Всего можно указать четыре DNS-сервера.

В Ubuntu этот файл автоматически перезаписывается при установке соединения с Интернетом — сюда записываются адреса DNS-серверов, полученных от провайдера, что не совсем хорошо, особенно когда вы настроили собственный DNS-сервер и желаете его использовать.

/etc/route.conf	В старых версиях SUSE данный файл содержит описание статических маршрутов, в том числе и маршрут по умолчанию.
/etc/services	База данных сервисов, задающая соответствие символьного имени сервиса (например, pop3) и номера порта (110/tcp, tcp — это наименование протокола).
/etc/sysconfig/network	Параметры сетевого интерфейса в Fedora, Red Hat и других дистрибутивах, основанных на Fedora/Red Hat, например, ASPLinux, Mandriva.
/etc/sysconfig/static-routes	Статические маршруты в Fedora/CentOS/ASPLinux.
/etc/sysconfig/network/routes	Статические маршруты в современных версиях openSUSE.
/etc/sysconfig/network-scripts/ifcfg-имя	Параметры конкретного сетевого интерфейса, например, параметры интерфейса eth0 хранятся в файле /etc/sysconfig/network-scripts/ifcfg-eth0 (дистрибутив Fedora).
/etc/sysconfig/network/ ifcfg-имя	Параметры конкретного сетевого интерфейса (имя — имя сетевого интерфейса). Дистрибутив openSUSE.
/etc/xinetd.conf	Файл конфигурации суперсервера xinetd, предназначенного для запуска сетевых сервисов, которые не работают в автономном режиме.
img

Теперь приведём таблицы основных команд работы с сетью:

ifconfig	
Означает конфигуратор интерфейса.

Это одна из самых основных команд, используемых при проверке сети. ifconfig используется для инициализации интерфейса, настройки его с помощью IP-адреса, включения или отключения.

Она также используется для отображения маршрута и сетевого интерфейса. Основная информация, отображаемая при использовании ifconfig:

IP-адрес,
MAC-адрес,
MTU (максимальная размер в байтах единицы передачи информации на данном сетевом уровне).
Отметим, что эта команда признана устаревшей, тем не менее важно знать о ней.

ifconfig <interface> — просмотр сведений о конкретном интерфейсе.

ifconfig <interface> <address> netmask <address> — временная установка ip-адреса и маски на данный интерфейс.

ifup <interface> — включение данного сетевого интерфейса.

ifdown <interface> — отключение данного сетевого интерфейса.

ip	
Обновленная и несколько усовершенствованная версия команды ifconfig.

$ ip [опции] объект команда [параметры] — общая форма команды.

Объект — это тип данных, с которым надо будет работать, например: адреса, устройства, таблица arp, таблица маршрутизации и так далее.

Команды — какое-либо действие с объектом.

Параметры — аргументы команды.

Объекты:

address или a — сетевые адреса при работе с этим объектом и указанием конкретного имени интерфейса. Перед именем интерфейса указывается ключевое слово dev.

link или l — физическое сетевое устройство.

neighbour или neigh — просмотр и управление ARP.

route или r — управление маршрутизацией.

rule или ru — правила маршрутизации.

tunnel или t — настройка туннелирования.

Команды: add, change, del или delete, flush, get, list или show, monitor, replace, restore, save, set и update. Если команда не задана, по умолчанию используется show (показать).

Параметры:

-v, -Version — только вывод информации об утилите и её версии.

-h, -human — выводит данные в удобном для человека виде.

-s, -stats — включает вывод статистической информации.

-d, -details — показывает ещё больше подробностей.

-r,-resolve — определяет имена хостов с помощью DNS.

-a, -all — применяет команду ко всем объектам.

-c, -color — позволяет настроить цвет, доступные значения: auto, always и never.

Во время ввода имени объекта или команды оно может быть сокращено, причём даже до одной буквы, если по одной букве можно однозначно определить это имя. Например, ip a show или ip addr show расшифровывается как ip address show.

ping	
Одна из наиболее часто используемых команд для устранения неполадок в сети. Она в основном проверяет сетевое соединение между двумя узлами.

ping означает Packet INternet Groper. Команда ping отправляет эхо-запрос ICMP для проверки подключения к сети. Он продолжает выполняться до тех пор, пока не будет прерван.

ping <destination> — проверка связи с заданным узлом.

ping -c <number> <destination> — проверка связи с заданным узлом с помощью отправки ограниченного числа пакетов.

nslookup	
Команда используется для получения сведений о записях DNS для данного домена и использует запрос к серверу имён DNS.

nslookup <domainName> <dnsRecord> — получение значения данной DNS-записи для данного доменного имени, если не указана запись, подразумевается запись типа A.

dig	
Расшифровывается как Domain Information Groper. Эта команда используется для получения сведений о записях DNS для данного домена и использует запрос к серверу имён DNS. Она также используется для устранения проблем, связанных с DNS.

Команда в основном используется для проверки сопоставлений DNS, записей MX, адресов хостов и всех других записей DNS.

Команда dig выполняет запрос к серверам, перечисленным в /etc/resolv.conf. Эта команда является новой версией команды nslookup.

dig <domainName> <dnsRecord> — получение значения данной DNS-записи для данного доменного имени, если не указана запись.

host	
Отображает имя домена для данного IP-адреса и IP-адрес для данного имени хоста. Она также используется для получения DNS-поиска для запросов, связанных с DNS.

host <domainName> | <ipAddress> — отображение либо доменного имени на IP-адрес, либо наоборот.

host -t <dnsRecord> — получение сведений о DNS-записи хоста.

hostname	Команда, используемая для просмотра и установки имени хоста системы.
Самостоятельная настройка сетевых параметров
Далее будет приведена информация только для случаев самостоятельной настройки сетевых параметров. Вы, как программист, вряд ли самостоятельно будете это налаживать, тем не менее, если вы уверены, что делаете, для ознакомления можете прочесть и узнать об использовании новых команд.

Для отображения всех сетевых интерфейсов можно выполнить такую команду:

$ ip link show
Для настройки сети или изменения её параметров, вам обязательно потребуется имя вашего сетевого адаптера. Его можно узнать из вывода команды:

$ sudo lshw -C network
Она позволяет посмотреть подключенные сетевые устройства.

Пример вывода команды:

ubuntu@ubuntu:~$ sudo lshw -C network
  *-network               
    description: Ethernet interface        #Тип устройства 
    product: L2 100 Mbit Ethernet Adapter  #Название адаптера
    vendor: Attansic Technology Corp.      #Производитель устройства
    physical id: 0
    bus info: pci@0000:03:00.0
    logical name: eth0              #Имя сетевого интерфейса
    version: a0
    serial: 00:00:00:00:00:00       #Физический адрес устройства (mac-адрес)
    size: 100MB/s
       capacity: 100MB/s
       width: 64 bits
       clock: 33MHz
       capabilities: pm msi pciexpress vpd bus_master cap_list 
       ethernet physical tp 10bt 10bt-fd 100bt 100bt-fd autonegotiation
       configuration: autonegotiation=on broadcast=yes 
                      driver=atl2         # Используемый драйвер
                      driverversion=2.2.3 # Версия драйвера
                      duplex=full firmware=L2 ip=192.168.0.5 latency=0 
                      link=yes            # Наличие линка
                      module=atl2 multicast=yes port=twisted pair 
                      speed=100MB/s       # Текущая скорость подключения.
Обратите внимание на строку:

logical name: eth0
eth0  — это и есть искомое имя сетевого интерфейса. eth означает, что используется Ethernet интерфейс, а 0 — номер устройства. Если у вас установлено несколько сетевых устройств, то, соответственно, им будут присвоены имена: eth0, eth1, eth2 и так далее.

После внедрения SystemD (начиная с Ubuntu 15.04) сетевые интерфейсы могут иметь другие имена (не ethX). Сделано это для того, чтобы имена сетевых устройств не менялись при подключении к машине новых адаптеров (в последнее время некоторые USB-модемы выступают в роли сетевого адаптера). В результате eth0 может называться, например, enp0s4, или eno1, или даже enx78e7d1ea46da. Именно это имя сетевого адаптера и нужно использовать в настройке сети.

Приведем пример настройки проводной сети, используя файл параметров /etc/network/interfaces.

$ sudo nano /etc/network/interfaces 
iface eth0 inet static 
address 192.168.0.1 
netmask 255.255.255.0 
gateway 192.168.0.254
dns-nameservers 192.168.0.254 8.8.8.8
auto eth0
iface eth0 inet static — указывает, что интерфейс (iface eth0) находится в диапазоне адресов IPv4 (inet) со статическим IP (static).

address 192.168.0.1 — указывает, что IP-адрес (address) нашей сетевой карты 192.168.0.1.

netmask 255.255.255.0 — указывает, что наша маска подсети (netmask) имеет значение 255.255.255.0.

gateway 192.168.0.254 — адрес шлюза (gateway) по умолчанию 192.168.0.254.

dns-nameservers 192.168.0.254 8.8.8.8 — адреса DNS-серверов.

auto eth0 — указывает системе, что интерфейс eth0 необходимо включать автоматически при загрузке системы с вышеуказанными параметрами.

eth0 — имя подключаемого своего интерфейса.

Список интерфейсов также можно посмотреть, набрав такую команду:

$ ip addr
Пример конфигурации для динамического IP:

iface eth0 inet dhcp
auto eth0
Пару слов о том, что такое аббревиатура DHCP. DHCP — это сетевой протокол, смысл и пользу которого можно почерпнуть из следующего. Каждое устройство в сети должно иметь уникальный IP-адрес при рассылке данных для доступа к сети и её ресурсам. Без DHCP IP-адреса новых компьютеров или компьютеров, перемещаемых из одной подсети в другую, необходимо настраивать вручную. IP-адреса для компьютеров, удаляемых из сети, необходимо освободить, причём опять же вручную.

При использовании DHCP весь процесс автоматизирован и управляется централизованно. DHCP-сервер поддерживает пул IP-адресов и, скажем так, арендованный (то есть временный или динамический) адрес любому клиенту с поддержкой DHCP при запуске в сети. Так как IP-адреса являются динамическими (арендованными), а не статическими (без постоянного назначения), адреса, которые больше не используются, автоматически возвращаются в пул для перераспределения.

Временная настройка IP-адреса и маски подсети
При необходимости задать пробные или временные настройки, можно выполнить команду ip addr, добавив подкоманду add:

$ sudo ip addr add 192.168.0.1/24 dev eth0
Где 192.168.0.1 — наш IP-адрес, /24 — число бит в префиксной части адреса (соответствует маске подсети 255.255.255.0). eth0 — подключаемый сетевой интерфейс.

Данные настройки пропадут после перезагрузки системы и не повлияют на файл /etc/network/interfaces.

За конфигурацию DNS отвечает утилита resolvconf, которая работает в паре с небольшим кэширующим DNS-сервером dnsmasq. resolvconf позволяет осуществить настройку DNS на основе данных от разных подсистем. Одним из следствий этого полезного нововведения (переход на эту схему произошёл в Ubuntu с версии 12.04) является то, что теперь файл /etc/resolv.conf генерируется автоматически, а не индивидуально каждой программой, которая хочет его изменить (порой перезаписывая правки, сделанные ранее).

Автоматическая генерация /etc/resolv.conf означает, что внесённые в него «руками» изменения будут потеряны. Автоматически формируемый /etc/resolv.conf содержит ссылку на DNS-сервер на локальном интерфейсе (127.0.1.1), а там (на 53 порту) и сидит сервис dnsmasq, который отвечает за разрешение символьных имён в IP-адреса.

Информацию о DNS для статических интерфейсов теперь надо вносить в /etc/network/interfaces в параметры dns-nameservers, dns-search и dns-domain (которые соответствуют параметрам nameserver, search и domain в /etc/resolv.conf).

Обратите внимание! В /etc/resolv.conf при записи нескольких серверов используется несколько ключей nameserver, а в /etc/network/interfaces все адреса DNS-серверов записывались в одну строчку после ключа dns-nameservers, разделённые пробелами.

Описание статического интерфейса в /etc/network/interfaces должно выглядеть примерно так:

iface eth0 inet static 
address 192.168.0.1 
netmask 255.255.255.0 
gateway 192.168.0.254 
dns-nameservers 8.8.8.8 192.168.0.254
auto eth0 
В более старых версиях Ubuntu, когда есть необходимость указать статические адреса DNS-серверов (если они не выдаются автоматически), выполните:

$ sudo nano /etc/resolv.conf
И впишите туда адреса DNS-серверов (отдельные записи для каждого сервера):

nameserver 192.168.0.100
nameserver 192.168.0.200
Где 192.168.0.100 и 192.168.0.200 — адреса DNS-серверов. Если нужно добавить больше адресов, каждый адрес нужно начинать с новой строки и с фразы nameserver.

Для перезапуска сетевых служб обычно используют такую команду:

$ sudo service networking restart
Или:

$ sudo service network-manager restart

Как проверить подключение к узлу с адресом 8.8.8.8?
ping 8.8.8.8 верно

Какими командами, по-вашему, можно посмотреть список всех IP-адресов сетевых интерфейсов компьютера?
ip a
ip a show
ip address show

На компьютере имеется сетевая карта, распознающаяся как сетевой интерфейс eth0. Какие из приведённых ниже команд удалят IP-адрес с этого интерфейса?
ip address dev eth0 del
ip addr dev eth0 delete

