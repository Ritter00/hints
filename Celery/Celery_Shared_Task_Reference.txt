# üìù Celery `@shared_task` Cheat Sheet

## üìå –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ `@shared_task`

| –ê—Ä–≥—É–º–µ–Ω—Ç              | –¢–∏–ø     | –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é       | –û–ø–∏—Å–∞–Ω–∏–µ                                                             | –ü—Ä–∏–º–µ—Ä                                        |
| --------------------- | ------- | ------------------ | -------------------------------------------------------------------- | --------------------------------------------- |
| `name`                | `str`   | `module.func_name` | –ò–º—è –∑–∞–¥–∞—á–∏ (–¥–ª—è –≤—ã–∑–æ–≤–∞ —á–µ—Ä–µ–∑ —Å—Ç—Ä–æ–∫—É)                                 | `@shared_task(name="tasks.add")`              |
| `bind`                | `bool`  | `False`            | –ï—Å–ª–∏ `True`, –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è `self` (—ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–¥–∞—á–∏)  | `@shared_task(bind=True)`                     |
| `max_retries`         | `int`   | 3                  | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ `retry()`                           | `@shared_task(max_retries=5)`                 |
| `default_retry_delay` | `int`   | 3                  | –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º                                      | `@shared_task(default_retry_delay=10)`        |
| `autoretry_for`       | `tuple` | `()`               | –ò—Å–∫–ª—é—á–µ–Ω–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö Celery –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ª–∞–µ—Ç retry            | `@shared_task(autoretry_for=(ValueError,))`   |
| `retry_kwargs`        | `dict`  | `{}`               | –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è retry (`max_retries`, `countdown`)                     | `@shared_task(retry_kwargs={"countdown": 5})` |
| `acks_late`           | `bool`  | `False`            | –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å –∑–∞–¥–∞—á—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–≤–∞–∂–Ω–æ –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏) | `@shared_task(acks_late=True)`                |
| `ignore_result`       | `bool`  | `False`            | –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–¥–∞—á–∏                                        | `@shared_task(ignore_result=True)`            |
| `rate_limit`          | `str`   | `None`             | –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (`"10/s"`, `"100/m"`)                | `@shared_task(rate_limit="5/m")`              |
| `time_limit`          | `int`   | `None`             | –ñ—ë—Å—Ç–∫–∏–π –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö), –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å —É–±–∏–≤–∞–µ—Ç—Å—è   | `@shared_task(time_limit=30)`                 |
| `soft_time_limit`     | `int`   | `None`             | –ú—è–≥–∫–∏–π –ª–∏–º–∏—Ç (–∏—Å–∫–ª—é—á–µ–Ω–∏–µ `SoftTimeLimitExceeded`)                    | `@shared_task(soft_time_limit=25)`            |

---

## üìå –ú–µ—Ç–æ–¥—ã –≤–Ω—É—Ç—Ä–∏ –∑–∞–¥–∞—á–∏ (–µ—Å–ª–∏ `bind=True`)

–ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞ —Å `bind=True`, —Ç–æ –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å `self` (—ç–∫–∑–µ–º–ø–ª—è—Ä `Task`).
–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:

| –ú–µ—Ç–æ–¥                 | –ê—Ä–≥—É–º–µ–Ω—Ç—ã                                      | –ß—Ç–æ –¥–µ–ª–∞–µ—Ç                                                 | –ü—Ä–∏–º–µ—Ä                                                   |
| --------------------- | ---------------------------------------------- | ---------------------------------------------------------- | -------------------------------------------------------- |
| `self.retry()`        | `exc=None, countdown=None, max_retries=None`   | –ü–æ–≤—Ç–æ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç `Retry`)          | `self.retry(exc=e, countdown=10)`                        |
| `self.update_state()` | `state=None, meta=None`                        | –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–¥–ª—è long-running job)          | `self.update_state(state="PROGRESS", meta={"done": 50})` |
| `self.apply_async()`  | `args=(), kwargs={}, countdown=None, eta=None` | –ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–∞–Ω–∞–ª–æ–≥ –≤—ã–∑–æ–≤–∞ `task.delay()`) | `self.apply_async(countdown=60)`                         |
| `self.apply()`        | `args=(), kwargs={}`                           | –ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ                                 | `self.apply(args=(2,3))`                                 |
| `self.AsyncResult()`  | `task_id`                                      | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–¥–∞—á–∏                        | `res = self.AsyncResult(self.request.id)`                |

---

## üìå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ `self.request`

–ö–æ–≥–¥–∞ `bind=True`, –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –≤—ã–∑–æ–≤–µ –∑–∞–¥–∞—á–∏:

| –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è                    | –ß—Ç–æ —Å–æ–¥–µ—Ä–∂–∏—Ç                                           | –ü—Ä–∏–º–µ—Ä                                             |
| ----------------------------- | ------------------------------------------------------ | -------------------------------------------------- |
| `self.request.id`             | ID –∑–∞–¥–∞—á–∏                                              | `"3fa85f64-5717-4562-b3fc-2c963f66afa6"`           |
| `self.request.args`           | –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã                                  | `(10, 20)`                                         |
| `self.request.kwargs`         | –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã                                  | `{"x": 10, "y": 20}`                               |
| `self.request.retries`        | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ç—Ä–∞–µ–≤                                     | `2`                                                |
| `self.request.delivery_info`  | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–∫–µ—Ä–µ/–æ—á–µ—Ä–µ–¥–∏                           | `{"exchange": "celery", "routing_key": "default"}` |
| `self.request.eta`            | –ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ (–µ—Å–ª–∏ `countdown` –∏–ª–∏ `eta`) | `'2025-08-25T16:00:00'`                            |
| `self.request.hostname`       | –ò–º—è –≤–æ—Ä–∫–µ—Ä–∞, –≤—ã–ø–æ–ª–Ω—è—é—â–µ–≥–æ –∑–∞–¥–∞—á—É                       | `"celery@worker1"`                                 |
| `self.request.correlation_id` | ID –¥–ª—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞                                       | `"abc123"`                                         |

---

## üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ:
üëâ [Celery ‚Äî Tasks](https://docs.celeryq.dev/en/stable/userguide/tasks.html)
